---
- name: initialize node_exists with false
  set_fact:
    node_exists: false

- name: check if node already exists
  set_fact:
    node_exists: true
  when: ansible_hostname in hostvars[k8s_master_name].node_list

- name: docker info for getting cgroup driver
  shell: docker info 2>/dev/null |grep "Cgroup Driver" |awk '{print $3}'
  register: docker_info

- name: get cgroup driver
  set_fact:
    cgroup_driver: "{{ docker_info.stdout }}"

- name: set cgroup driver to cgroupfs
  lineinfile:
    path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    regexp: '^Environment="KUBELET_CGROUP_ARGS=--cgroup-driver=.*"'
    line: 'Environment="KUBELET_CGROUP_ARGS=--cgroup-driver={{ cgroup_driver }}"'

- name: set cloud provider
  lineinfile:
    path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    regexp: '^Environment="KUBELET_KUBECONFIG_ARGS'
    line: 'Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --cloud-provider=aws"'

- name: enable kubelet service
  systemd:
    name: kubelet
    state: restarted
    daemon_reload: yes
    enabled: True
  when: node_exists == false

- name: debug join
  debug:
    msg: "master token: {{ hostvars[k8s_master_name].mastertoken }}"

- name: join k8s cluster
  shell: "kubeadm join --ignore-preflight-errors=cri --token {{ hostvars[k8s_master_name].mastertoken }} --discovery-token-unsafe-skip-ca-verification {{ k8s_master_ip }}:6443"
  when: node_exists == false
